{"version":3,"sources":["index.js"],"names":["refs","days","document","querySelector","hours","mins","secs","CountdownTimer","constructor","selector","targetDate","timerId","start","setInterval","deltaTime","Date","now","time","getTimeComponents","updateClockface","pad","Math","floor","value","String","padStart","textContent","countdownTimer"],"mappings":";;;AA4DA,aA3DA,QAAA,oBAIA,MAAMA,EAAO,CACPC,KAAMC,SAASC,cAAc,uBAC7BC,MAAOF,SAASC,cAAc,0BAC9BE,KAAMH,SAASC,cAAc,yBAC7BG,KAAMJ,SAASC,cAAc,0BAInC,MAAMI,EACJC,aAAY,SAACC,EAAD,WAAWC,IACdC,KAAAA,QAAU,KACVF,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EAItBE,QACOD,KAAAA,QAAUE,YAAY,KACnBC,MAAAA,EAAY,KAAKJ,WAAaK,KAAKC,MACjCC,EAAO,KAAKC,kBAAkBJ,GAC/BK,KAAAA,gBAAgBF,IACtB,KAGLC,kBAAkBD,GAMT,MAAA,CAAEhB,KALI,KAAKmB,IAAIC,KAAKC,MAAML,EAAQ,QAK1Bb,MAJD,KAAKgB,IAAIC,KAAKC,MAAOL,EAAQ,MAAyB,OAI9CZ,KAHT,KAAKe,IAAIC,KAAKC,MAAOL,EAAQ,KAAoB,MAGlCX,KAFf,KAAKc,IAAIC,KAAKC,MAAOL,EAAQ,IAAc,OAK1DG,IAAIG,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGlCN,iBAAgB,KAAElB,EAAF,MAAQG,EAAR,KAAeC,EAAf,KAAqBC,IACpCN,EAAKC,KAAKyB,YAAczB,EACxBD,EAAKI,MAAMsB,YAActB,EACzBJ,EAAKK,KAAKqB,YAAcrB,EACxBL,EAAKM,KAAKoB,YAAcpB,GAM5B,MAAMqB,EAAiB,IAAIpB,EAAe,CACxCE,SAAU,WACVC,WAAY,IAAIK,KAAK,kBAMvBY,EAAef","file":"src.1c5a3a56.js","sourceRoot":"../src","sourcesContent":["\nimport './sass/main.scss';\n\n\n// ССылки\nconst refs = {\n      days: document.querySelector('[data-value=\"days\"]'),\n      hours: document.querySelector('[data-value = \"hours\"]'),\n      mins: document.querySelector('[data-value = \"mins\"]'),\n      secs: document.querySelector('[data-value = \"secs\"]'),\n};\n    \n// Класс\nclass CountdownTimer {\n  constructor({selector, targetDate}) {\n      this.timerId = null;\n      this.selector = selector;\n      this.targetDate = targetDate;\n      \n  }\n\n  start() {\n    this.timerId = setInterval(() => {\n      const deltaTime = this.targetDate - Date.now();\n        const time = this.getTimeComponents(deltaTime);\n        this.updateClockface(time);\n    }, 1000);\n  }\n\n  getTimeComponents(time) {\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { days, hours, mins, secs };\n    };\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  };\n\n   updateClockface({ days, hours, mins, secs }) {\n    refs.days.textContent = days;\n    refs.hours.textContent = hours;\n    refs.mins.textContent = mins;\n    refs.secs.textContent = secs;\n  };\n\n};\n\n// Экземпляр\nconst countdownTimer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Dec 24, 2021'),\n\n});\n\n// Обновление интерфейса\n\ncountdownTimer.start();"]}